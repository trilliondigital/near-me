version: '3.9'

# Production stack for Near Me
# Services:
# - api: Node.js backend (served behind nginx)
# - postgres: PostgreSQL database (consider managed DB for production)
# - redis: Redis cache/session store
# - nginx: Reverse proxy and static termination

name: nearme-prod

networks:
  web:
    driver: bridge

volumes:
  postgres_data:
  redis_data:

services:
  api:
    image: ghcr.io/${GHCR_OWNER}/nearme-backend:${VERSION:-latest}
    container_name: nearme-api
    restart: unless-stopped
    env_file:
      - ../backend.env
    environment:
      - NODE_ENV=production
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - web

  postgres:
    image: postgres:15-alpine
    container_name: nearme-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - web

  redis:
    image: redis:7-alpine
    container_name: nearme-redis
    restart: unless-stopped
    command: ["sh", "-c", "redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - web

  nginx:
    image: nginx:alpine
    container_name: nearme-nginx
    restart: unless-stopped
    depends_on:
      - api
    ports:
      - "80:80"
      # Uncomment and configure TLS if certificates are available
      # - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - web
